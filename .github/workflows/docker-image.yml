name: Docker Build and Deploy

on:
  push:
    branches: [ "develop" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Step 2: Definir el nombre dinÃ¡mico de la imagen (timestamp)
    - name: Set Image Tag
      id: vars
      run: echo "IMAGE_TAG=store:$(date +%s)" >> $GITHUB_ENV
    
    # Step 2: Construir la imagen Docker localmente
    - name: Build Docker image
      run: docker build . --file Dockerfile --tag ${{ env.IMAGE_TAG }}

    # Step 3: Guardar la imagen Docker como un archivo tar
    - name: Save Docker image to file
      run: docker save -o store.tar ${{ env.IMAGE_TAG }}

    # Step 4: Copiar la imagen tar al servidor Ubuntu
    - name: Copy image to server
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        port: ${{ secrets.SERVER_PORT }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        source: ./store.tar
        target: /home/mgiraudo/

    # Step 5: SSH al servidor para importar y desplegar la imagen
    - name: Deploy to Server
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        port: ${{ secrets.SERVER_PORT }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          sudo docker load -i /home/mgiraudo/store.tar
          sudo docker stop append-client || true
          sudo docker rm append-client || true
          sudo docker run -d -p 4200:80 --name append-client ${{ env.IMAGE_TAG }}
